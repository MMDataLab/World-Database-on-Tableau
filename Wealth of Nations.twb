<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='WealthofNations_17180187070400' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='GDP+ (The Wealth of nations)' inline='true' name='federated.0m3iisg1dbi9co12ttl9212xpoq0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='The Wealth of nations' name='excel-direct.0gav3qt0e2idd91b76d7s0rv25jd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/m_dah/Downloads/The Wealth of nations.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0gav3qt0e2idd91b76d7s0rv25jd' name='GDP' table='[GDP$]' type='table'>
          <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='GDP - per capita (PPP)' ordinal='2' />
            <column datatype='integer' name='Year of Information' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0gav3qt0e2idd91b76d7s0rv25jd' name='GDP' table='[GDP$]' type='table'>
            <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='GDP - per capita (PPP)' ordinal='2' />
              <column datatype='integer' name='Year of Information' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0gav3qt0e2idd91b76d7s0rv25jd' name='Life Expectancy' table='[&apos;Life Expectancy$&apos;]' type='table'>
            <columns gridOrigin='A1:D197:no:A1:D197:0' header='yes' outcome='6'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='Life expectancy at birth' ordinal='2' />
              <column datatype='integer' name='Date of Information' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0gav3qt0e2idd91b76d7s0rv25jd' name='Smartphones' table='[Smartphones$]' type='table'>
            <columns gridOrigin='A1:D75:no:A1:D75:0' header='yes' outcome='6'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='integer' name='Smartphone Users' ordinal='2' />
              <column datatype='integer' name='Date of Information' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country (Life Expectancy)]' value='[Life Expectancy].[Country]' />
          <map key='[Country (Smartphones)]' value='[Smartphones].[Country]' />
          <map key='[Country]' value='[GDP].[Country]' />
          <map key='[Date of Information (Smartphones)]' value='[Smartphones].[Date of Information]' />
          <map key='[Date of Information]' value='[Life Expectancy].[Date of Information]' />
          <map key='[GDP - per capita (PPP)]' value='[GDP].[GDP - per capita (PPP)]' />
          <map key='[Life expectancy at birth]' value='[Life Expectancy].[Life expectancy at birth]' />
          <map key='[Rank (Life Expectancy)]' value='[Life Expectancy].[Rank]' />
          <map key='[Rank (Smartphones)]' value='[Smartphones].[Rank]' />
          <map key='[Rank]' value='[GDP].[Rank]' />
          <map key='[Smartphone Users]' value='[Smartphones].[Smartphone Users]' />
          <map key='[Year of Information]' value='[GDP].[Year of Information]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D229:no:A1:D229:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D197:no:A1:D197:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D75:no:A1:D75:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_F8552FD783E4482C969D5C74F5243BD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_F8552FD783E4482C969D5C74F5243BD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP - per capita (PPP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP - per capita (PPP)]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>GDP - per capita (PPP)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_F8552FD783E4482C969D5C74F5243BD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year of Information]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Year of Information</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_F8552FD783E4482C969D5C74F5243BD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank (Life Expectancy)]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Life Expectancy)]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Life expectancy at birth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Date of Information]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Date of Information</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smartphone Users</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Smartphone Users]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Smartphone Users</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Date of Information (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Date of Information</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (Life Expectancy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Smartphones)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Life expectancy at birth]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Smartphone Users]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='GDP' datatype='table' name='[__tableau_internal_object_id__].[GDP_F8552FD783E4482C969D5C74F5243BD3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Life Expectancy' datatype='table' name='[__tableau_internal_object_id__].[Life Expectancy_E82DBE4412D044448881CE299FC4935D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Smartphones' datatype='table' name='[__tableau_internal_object_id__].[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]' role='measure' type='quantitative' />
      <column-instance column='[Smartphone Users]' derivation='Avg' name='[avg:Smartphone Users:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Smartphone Users]' derivation='CountD' name='[ctd:Smartphone Users:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Smartphone Users]' derivation='Max' name='[max:Smartphone Users:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country (Life Expectancy)]' derivation='None' name='[none:Country (Life Expectancy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country (Smartphones)]' derivation='None' name='[none:Country (Smartphones):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Smartphone Users]' derivation='Sum' name='[sum:Smartphone Users:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/m_dah/AppData/Local/Temp/TableauTemp/#TableauTemp_07u6t100bl1fxd17b4ysm0xva5wq.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/07/2024 10:56:08 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='GDP_F8552FD783E4482C969D5C74F5243BD3' table='[Extract].[GDP_F8552FD783E4482C969D5C74F5243BD3]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='GDP_F8552FD783E4482C969D5C74F5243BD3' table='[Extract].[GDP_F8552FD783E4482C969D5C74F5243BD3]' type='table' />
            <relation name='Life Expectancy_E82DBE4412D044448881CE299FC4935D' table='[Extract].[Life Expectancy_E82DBE4412D044448881CE299FC4935D]' type='table' />
            <relation name='Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E' table='[Extract].[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Country (Life Expectancy)]' value='[Life Expectancy_E82DBE4412D044448881CE299FC4935D].[Country]' />
            <map key='[Country (Smartphones)]' value='[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E].[Country]' />
            <map key='[Country]' value='[GDP_F8552FD783E4482C969D5C74F5243BD3].[Country]' />
            <map key='[Date of Information (Smartphones)]' value='[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E].[Date of Information]' />
            <map key='[Date of Information]' value='[Life Expectancy_E82DBE4412D044448881CE299FC4935D].[Date of Information]' />
            <map key='[GDP - per capita (PPP)]' value='[GDP_F8552FD783E4482C969D5C74F5243BD3].[GDP - per capita (PPP)]' />
            <map key='[Life expectancy at birth]' value='[Life Expectancy_E82DBE4412D044448881CE299FC4935D].[Life expectancy at birth]' />
            <map key='[Rank (Life Expectancy)]' value='[Life Expectancy_E82DBE4412D044448881CE299FC4935D].[Rank]' />
            <map key='[Rank (Smartphones)]' value='[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E].[Rank]' />
            <map key='[Rank]' value='[GDP_F8552FD783E4482C969D5C74F5243BD3].[Rank]' />
            <map key='[Smartphone Users]' value='[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E].[Smartphone Users]' />
            <map key='[Year of Information]' value='[GDP_F8552FD783E4482C969D5C74F5243BD3].[Year of Information]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank]</local-name>
              <parent-name>[GDP_F8552FD783E4482C969D5C74F5243BD3]</parent-name>
              <remote-alias>Rank</remote-alias>
              <ordinal>0</ordinal>
              <family>GDP</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_F8552FD783E4482C969D5C74F5243BD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[GDP_F8552FD783E4482C969D5C74F5243BD3]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>GDP</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_F8552FD783E4482C969D5C74F5243BD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP - per capita (PPP)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP - per capita (PPP)]</local-name>
              <parent-name>[GDP_F8552FD783E4482C969D5C74F5243BD3]</parent-name>
              <remote-alias>GDP - per capita (PPP)</remote-alias>
              <ordinal>2</ordinal>
              <family>GDP</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_F8552FD783E4482C969D5C74F5243BD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year of Information</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year of Information]</local-name>
              <parent-name>[GDP_F8552FD783E4482C969D5C74F5243BD3]</parent-name>
              <remote-alias>Year of Information</remote-alias>
              <ordinal>3</ordinal>
              <family>GDP</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_F8552FD783E4482C969D5C74F5243BD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank (Life Expectancy)]</local-name>
              <parent-name>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</parent-name>
              <remote-alias>Rank</remote-alias>
              <ordinal>4</ordinal>
              <family>Life Expectancy</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Life Expectancy)]</local-name>
              <parent-name>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>5</ordinal>
              <family>Life Expectancy</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life expectancy at birth</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life expectancy at birth]</local-name>
              <parent-name>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</parent-name>
              <remote-alias>Life expectancy at birth</remote-alias>
              <ordinal>6</ordinal>
              <family>Life Expectancy</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date of Information</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Date of Information]</local-name>
              <parent-name>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</parent-name>
              <remote-alias>Date of Information</remote-alias>
              <ordinal>7</ordinal>
              <family>Life Expectancy</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_E82DBE4412D044448881CE299FC4935D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank (Smartphones)]</local-name>
              <parent-name>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</parent-name>
              <remote-alias>Rank</remote-alias>
              <ordinal>8</ordinal>
              <family>Smartphones</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Smartphones)]</local-name>
              <parent-name>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>9</ordinal>
              <family>Smartphones</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Smartphone Users</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Smartphone Users]</local-name>
              <parent-name>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</parent-name>
              <remote-alias>Smartphone Users</remote-alias>
              <ordinal>10</ordinal>
              <family>Smartphones</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date of Information</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Date of Information (Smartphones)]</local-name>
              <parent-name>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</parent-name>
              <remote-alias>Date of Information</remote-alias>
              <ordinal>11</ordinal>
              <family>Smartphones</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country (Life Expectancy):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3iisg1dbi9co12ttl9212xpoq0].[avg:Smartphone Users:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3iisg1dbi9co12ttl9212xpoq0].[ctd:Smartphone Users:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3iisg1dbi9co12ttl9212xpoq0].[max:Smartphone Users:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Smartphone Users:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Life expectancy at birth:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (Smartphones):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent &amp; the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='GDP' id='GDP_F8552FD783E4482C969D5C74F5243BD3'>
            <properties context=''>
              <relation connection='excel-direct.0gav3qt0e2idd91b76d7s0rv25jd' name='GDP' table='[GDP$]' type='table'>
                <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='GDP - per capita (PPP)' ordinal='2' />
                  <column datatype='integer' name='Year of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='GDP_F8552FD783E4482C969D5C74F5243BD3' table='[Extract].[GDP_F8552FD783E4482C969D5C74F5243BD3]' type='table' />
            </properties>
          </object>
          <object caption='Life Expectancy' id='Life Expectancy_E82DBE4412D044448881CE299FC4935D'>
            <properties context=''>
              <relation connection='excel-direct.0gav3qt0e2idd91b76d7s0rv25jd' name='Life Expectancy' table='[&apos;Life Expectancy$&apos;]' type='table'>
                <columns gridOrigin='A1:D197:no:A1:D197:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Life expectancy at birth' ordinal='2' />
                  <column datatype='integer' name='Date of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Life Expectancy_E82DBE4412D044448881CE299FC4935D' table='[Extract].[Life Expectancy_E82DBE4412D044448881CE299FC4935D]' type='table' />
            </properties>
          </object>
          <object caption='Smartphones' id='Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E'>
            <properties context=''>
              <relation connection='excel-direct.0gav3qt0e2idd91b76d7s0rv25jd' name='Smartphones' table='[Smartphones$]' type='table'>
                <columns gridOrigin='A1:D75:no:A1:D75:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Smartphone Users' ordinal='2' />
                  <column datatype='integer' name='Date of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E' table='[Extract].[Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Life Expectancy)]' />
            </expression>
            <first-end-point object-id='GDP_F8552FD783E4482C969D5C74F5243BD3' />
            <second-end-point object-id='Life Expectancy_E82DBE4412D044448881CE299FC4935D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (Life Expectancy)]' />
              <expression op='[Country (Smartphones)]' />
            </expression>
            <first-end-point object-id='Life Expectancy_E82DBE4412D044448881CE299FC4935D' />
            <second-end-point object-id='Smartphones_04F4748E72B14BF2AEDBFE9B916D7E6E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP World Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0000ff' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.0m3iisg1dbi9co12ttl9212xpoq0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m3iisg1dbi9co12ttl9212xpoq0'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='CountD' name='[ctd:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[ctd:GDP - per capita (PPP):qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' included-values='in-range'>
            <min>752.0</min>
            <max>190513.0</max>
          </filter>
          <slices>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[ctd:GDP - per capita (PPP):qk]</column>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]</column>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Latitude (generated)]</column>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Longitude (generated)]</column>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Longitude (generated)]' field-type='quantitative' max='20669428.296016753' min='-22251776.873702213' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Latitude (generated)]' field-type='quantitative' max='12052047.355085947' min='-12052047.355085947' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' num-steps='20' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' value='false' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' />
              <color column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' />
              <geometry column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Latitude (generated)]</rows>
        <cols>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D3E051B1-BA50-4DA4-A795-FDF5032B3FBC}' />
    </worksheet>
    <worksheet name='Realtionship between  GDP Per Capita and Life Expectancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0000ff' underline='true'>Realtionship between  GDP Per Capita and Life Expectancy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.0m3iisg1dbi9co12ttl9212xpoq0' />
          </datasources>
          <datasource-dependencies datasource='federated.0m3iisg1dbi9co12ttl9212xpoq0'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life expectancy at birth]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Life expectancy at birth:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]</column>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Life expectancy at birth:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='border-color' value='#0000ff' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='border-color' value='#0000ff' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#0000ff' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' />
              <text column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Life expectancy at birth:qk]</rows>
        <cols>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]</cols>
      </table>
      <simple-id uuid='{5D699D9D-3D1E-4D6F-889F-4AF385D90031}' />
    </worksheet>
    <worksheet name='Smartphone Users Vs GDP per Capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0000ff' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.0m3iisg1dbi9co12ttl9212xpoq0' />
          </datasources>
          <datasource-dependencies datasource='federated.0m3iisg1dbi9co12ttl9212xpoq0'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Smartphone Users]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Smartphone Users]' derivation='Sum' name='[sum:Smartphone Users:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Smartphone Users:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]</column>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Smartphone Users:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#0000ff' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='border-color' value='#0000ff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' />
              <tooltip column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[attr:Country:nk]' />
              <text column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' />
              <lod column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Smartphone Users:qk]</rows>
        <cols>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]</cols>
      </table>
      <simple-id uuid='{358E2434-77F8-46F0-9D18-D5B3F3D4926B}' />
    </worksheet>
    <worksheet name='Top 20 Countries Life Expectancy 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0000ff' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.0m3iisg1dbi9co12ttl9212xpoq0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m3iisg1dbi9co12ttl9212xpoq0'>
            <column datatype='string' name='[Country (Life Expectancy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life expectancy at birth]' role='measure' type='quantitative' />
            <column-instance column='[Country (Life Expectancy)]' derivation='None' name='[none:Country (Life Expectancy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Life Expectancy):nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Life expectancy at birth])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country (Life Expectancy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Life Expectancy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Life expectancy at birth:ok]' direction='ASC'>
            <dictionary>
              <bucket>83.0</bucket>
              <bucket>82.200000000000003</bucket>
              <bucket>82.299999999999997</bucket>
              <bucket>82.400000000000006</bucket>
              <bucket>82.5</bucket>
              <bucket>82.700000000000003</bucket>
              <bucket>82.799999999999997</bucket>
              <bucket>83.400000000000006</bucket>
              <bucket>83.5</bucket>
              <bucket>83.599999999999994</bucket>
              <bucket>83.799999999999997</bucket>
              <bucket>84.599999999999994</bucket>
              <bucket>84.900000000000006</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Life Expectancy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='band-color' scope='rows' value='#faf4e7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='band-color' scope='rows' value='#faf4e7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='none' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Life expectancy at birth:ok]' />
              <text column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Life Expectancy):nk]' />
              <text column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Life expectancy at birth:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#0000ff' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='173' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AFC306C5-25E1-4413-AFB5-89693BE350D7}' />
    </worksheet>
    <worksheet name='Top 20 Smartphone Users by Country 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.0m3iisg1dbi9co12ttl9212xpoq0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m3iisg1dbi9co12ttl9212xpoq0'>
            <column datatype='string' name='[Country (Smartphones)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Smartphone Users]' role='measure' type='quantitative' />
            <column-instance column='[Country (Smartphones)]' derivation='None' name='[none:Country (Smartphones):nk]' pivot='key' type='nominal' />
            <column-instance column='[Smartphone Users]' derivation='Sum' name='[sum:Smartphone Users:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Smartphones):nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Smartphone Users])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country (Smartphones):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Smartphones):nk]' direction='ASC' />
          <slices>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Smartphones):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Smartphone Users:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='1073' />
            <format attr='height' value='492' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='4' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Smartphones):nk]' value='false' />
            <format attr='text-orientation' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Smartphones):nk]' value='0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#0000ff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#0000ff' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='underline' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Smartphones):nk]' />
              <wedge-size column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Smartphone Users:qk]' />
              <size column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Smartphone Users:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{491D0262-243D-43EB-A6CC-3BAEA5D86FFF}' />
    </worksheet>
    <worksheet name='Top 20: GDP Per Capita (PPP) - 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0000ff' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.0m3iisg1dbi9co12ttl9212xpoq0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m3iisg1dbi9co12ttl9212xpoq0'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP - per capita (PPP)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
            <format attr='border-width' value='3' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='band-color' scope='rows' value='#faf4e7' />
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2f2da</color>
                <color>#f3f3c3</color>
                <color>#f5f5ab</color>
                <color>#f6f693</color>
                <color>#f8f87c</color>
                <color>#f9f963</color>
                <color>#fafa4b</color>
                <color>#fcfc32</color>
                <color>#fdfd19</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='band-color' scope='rows' value='#faf4e7' />
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='underline' />
            <format attr='color' value='#0000ff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#0000ff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' />
              <color column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' />
              <text column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]' />
              <text column='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7B95A2EE-ED78-4D0E-9EB2-8B5784928ECC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Wealth of Nations'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#faf4e7' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#0000ff' />
          <format attr='font-weight' value='bold' />
          <format attr='text-decoration' value='underline' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
          <format attr='border-color' value='#0000ff' />
          <format attr='text-align' value='center' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#0000ff' />
          <format attr='font-weight' value='bold' />
          <format attr='text-decoration' value='underline' />
          <format attr='background-color' value='#faf4e7' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='10000' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98154' id='61' param='vert' type-v2='layout-flow' w='98964' x='518' y='923'>
            <zone h='5652' id='62' type-v2='title' w='98964' x='518' y='923'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92502' id='54' param='horz' type-v2='layout-flow' w='98964' x='518' y='6575'>
              <zone h='92502' id='38' param='horz' type-v2='layout-flow' w='98964' x='518' y='6575'>
                <zone h='92502' id='36' type-v2='layout-basic' w='98964' x='518' y='6575'>
                  <zone h='50083' id='26' param='horz' type-v2='layout-flow' w='98964' x='518' y='6575'>
                    <zone h='50083' id='18' param='horz' type-v2='layout-flow' w='98964' x='518' y='6575'>
                      <zone h='50083' id='13' param='horz' type-v2='layout-flow' w='98964' x='518' y='6575'>
                        <zone h='50083' id='11' type-v2='layout-basic' w='98964' x='518' y='6575'>
                          <zone h='50083' id='7' param='horz' type-v2='layout-flow' w='98964' x='518' y='6575'>
                            <zone h='50083' id='5' type-v2='layout-basic' w='98964' x='518' y='6575'>
                              <zone h='50083' id='21' name='GDP World Map' w='30762' x='518' y='6575'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='50083' id='51' name='Realtionship between  GDP Per Capita and Life Expectancy' w='32543' x='31280' y='6575'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='50083' id='55' name='Smartphone Users Vs GDP per Capita' w='35659' x='63823' y='6575'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='42419' id='33' name='Top 20 Countries Life Expectancy 2020' w='32543' x='31280' y='56658'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42419' id='34' name='Top 20 Smartphone Users by Country 2020' w='35659' x='63823' y='56658'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42419' id='52' name='Top 20: GDP Per Capita (PPP) - 2020' w='30762' x='518' y='56658'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='64' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98154' id='63' param='vert' type-v2='layout-flow' w='98964' x='518' y='923'>
                <zone h='5652' id='62' type-v2='title' w='98964' x='518' y='923'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50083' id='21' is-fixed='true' name='GDP World Map' w='30762' x='518' y='6575'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50083' id='51' is-fixed='true' name='Realtionship between  GDP Per Capita and Life Expectancy' w='32543' x='31280' y='6575'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50083' id='55' is-fixed='true' name='Smartphone Users Vs GDP per Capita' w='35659' x='63823' y='6575'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42419' id='52' is-fixed='true' name='Top 20: GDP Per Capita (PPP) - 2020' w='30762' x='518' y='56658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42419' id='33' is-fixed='true' name='Top 20 Countries Life Expectancy 2020' w='32543' x='31280' y='56658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42419' id='34' is-fixed='true' name='Top 20 Smartphone Users by Country 2020' w='35659' x='63823' y='56658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3E7878B9-9197-4C47-B38D-D8DCE5B38DB9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='GDP World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[cnt:GDP - per capita (PPP):ok]</field>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]</field>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73F0B64C-6058-4227-A4C1-95DF4AAAE6EA}' />
    </window>
    <window class='worksheet' name='Top 20: GDP Per Capita (PPP) - 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:GDP - per capita (PPP):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8FF0C8C-5256-433D-A810-FB7619AEFF80}' />
    </window>
    <window class='worksheet' name='Top 20 Countries Life Expectancy 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Life Expectancy):nk]</field>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Life expectancy at birth:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A98BD64-CADE-4D9F-9C21-39DD8CFD947B}' />
    </window>
    <window class='worksheet' name='Top 20 Smartphone Users by Country 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Smartphones):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0m3iisg1dbi9co12ttl9212xpoq0].[sum:Smartphone Users:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country (Smartphones):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1ECAA26E-5734-4525-B008-06300237CF47}' />
    </window>
    <window class='worksheet' name='Realtionship between  GDP Per Capita and Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3E4C72E-5641-4202-A6E0-A8743E94A506}' />
    </window>
    <window class='worksheet' name='Smartphone Users Vs GDP per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3iisg1dbi9co12ttl9212xpoq0].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C02F220-B0D5-4D12-8426-DA3B97DB1379}' />
    </window>
    <window class='dashboard' maximized='true' name='Wealth of Nations'>
      <viewpoints>
        <viewpoint name='GDP World Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Realtionship between  GDP Per Capita and Life Expectancy'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Smartphone Users Vs GDP per Capita'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 20 Countries Life Expectancy 2020'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 20 Smartphone Users by Country 2020'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 20: GDP Per Capita (PPP) - 2020'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{8A3D6E58-81A5-4A2F-955C-4DB5CD677888}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP World Map' width='192'>
      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
      86/A/weiqOZNe8RQZgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Realtionship between  GDP Per Capita and Life Expectancy' width='192'>
      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
      YiM0yYYH01SHoHVIQVMlnec13BGL0R6VgiUm9YWSs0UWLgSKAh5PdtTVtOwoHwzblPklugsm
      xwWqKnlqa5qdb/ioWWJTUyJJG1BRbfHYFoPuc3DkhM7S8rvnlborATFSSlJG9nz7pvoIpQU+
      /uNrp9BVhS3Li9h9up+RyTR+j06+X8eyJcm0xf/7e038p9eO8/ymcnpHk3x56kz3qbYxuofj
      jMczSAlf2VLJL/d38tT6JRxvHeVU2xjj8QwFQTflkQDPbiylKN/DsZYRLvdNMpkyqSry8+S6
      Jbx7qJszHWMEvTodgzEieW7+4MXlfHKyD9OyMUybVdURookU65YWTJtNs2FNBbxvbiwkfI1L
      M5fdTyklv9jbSWN5Hh6XyqGLw7y6tWZaKeZrJ/iLehjuCl/IWyEudE3w051tTMQz7Do9wP/+
      ykqWV+Sz81Q/yYzF42tKWFaRz99/eIk8r4uxWJrhaJq/eOs0VUUB1i4N09wTxbKyNmT3cJze
      kQTr6wo40z7O0ZYR2gZinLw8Nm1DFwTd/NFXVqBr+nRlN9ZHWFaRj2XbBL0uUoaFadn43BoZ
      M+v6u9wX4593XualByqoKPRjWTavfdbJ72yrvqVXZySa5lznOC5N4fG1t14AX4sQgq89XMW5
      rnFiSeO6zu/w22PeFcCyJa9/1s6Lmytoaojw5p52/utb53h8bSnPbiyjbzRJxrT5j6+dxp46
      g/P9Zxo4eHGIV7fWTXfetbVh/vy10wQ8GiG/C1VV+Omnl1lbU8Ch5hH8bo0HlxXyyKpi/vLX
      F6grDeLW1RmHxPzXnHm3bYmqCty6wtIl+VQW+vnJJ63YtiTPlx3BVVVB01QsW97SVVkc8vC9
      J5cSDrpv+rkboSiC1dXh23rWYX6Y9yHnyvUfW5Zng66/va2WqmI/l/snOdc5warqEMdaRhAC
      dFWhviyPf9h+6TrfcypjsfP0AN99Yimra0L4vRr7zg3yQGMRzzWVMTKRYmA8xZ/+9CR/+asL
      fP+ZenI5jeT3aJhW9uhwc3eUHSf72Lo6OxvtOzeIYdr0jCTQVa7bHb0ZkTzPLW95cFi4zLsC
      aKqgPOLjcn+M7cd6+atfX6R7OI5lS0zbZvvxXgYnUqytCfNvX12NW1eoLgoQSxqYlkRKyY8+
      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
      xAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Smartphone Users Vs GDP per Capita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 20 Countries Life Expectancy 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 20 Smartphone Users by Country 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 20: GDP Per Capita (PPP) - 2020' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAXl0lEQVR4nO3daXAc553f8W9fc2AwB4DBNQABkARA8L5E3bIkylrJ69iOvHY2qz2SSm3i
      yotUqpLKq1TlVVK1b7JVW5WqTVxee+3dssvyWquNd21ZNkUqpEyKpMADBEGAIImDxMEZYHAO
      5ujuJy8gS6IJyZTYYhPs/6cKNTONwcx/GvObfp6nn+nWXNdVCBFQJkBledrvOoTwhQmgFDS1
      NbB7p+13PULcU+avr+zZbXP4yH8GzvtYzvrlul+mUmnxu4x1pBPHqfK7iA8CsOoscMyXQtY7
      pbYi3ak7p2l1OI7jdxnofhcghJ/WDMDsyD6++aMvM9r3JN/+0T9HuRquAqU0XFf70CW3XAqY
      G6vn3aFqlOK99cJt1133vetli1++1freur31vr95/wd12zIzUsXf/F0NbxxJoFxuWRfv/6hb
      18uZY0nmih+sn7thrrWwXEhyI9fC1ayOM9fO9/76P+BaS9gr9RSKiuefPsU3v/kyz3zhDarj
      0yzmOikVojz+xe/QVlu4u4rWucpKmPxymUOv7aBj2wynB6uYHK5nW9ccR443s2frLHPKwdQM
      ElaFyVyM6+M1VBsaK2WohFx2NJcZno5Q1kpYlQjzOYt//R9P43+L2XvlZZO5eYOQofHnf9aG
      Ey+R0C26Nxa5MqGhDI1YwiViu4COZWhMTYQwayr88LsN/Ml/Gqe76dM3pdYMAJpiR/M8Ywsu
      mu6iaRoaEEtmqU3C2b7tPLR9jJLjUq1A1xWuAk02AgBcONNMTwr6+tLYqkQ47LJS1tn/xAib
      4wb5yAKlYhVMR9F1RShsozsmoBFG59LVJFaiwOeevsbxn27HcR7clqqmKXRLUSkZ1DaW2fvo
      AkOXYuzbuYKKaRSKOiiL3GiIolI0JBWGqRjor2LXrgLLxbt7090WAKVgqpSnqyO/uqBj9Lc+
      SDrVu3oZce+qmAdBJZ7n4IHSrQu35G+5mQaILENqmZYtuY98rKXJJNWxEgtlB72sQ+jBW79u
      qshTez70Ce5o9HQVGMtDfY0CXMCmPbOy5t+3Ju6uDXRbADQN9uw5d1cPGmSZzDKZzLJnj7dr
      V9azx7ofZTIVMpmKb8+/ZhNosO8Z+sdDdNTCyFgzex46zenT+9i47SQHtg/xox/8Ke09x2mM
      xfjVxUaefWiIs+f3sKHnLbZvnrzXr+G+Ui5E+NZ3t/Gn3zjDL3+8m/bHLnHt5CZqW2d49OFp
      rpxtYWgiRkvrLPmbCW4WFI9uWeFIX5x/9bXLfpd/z2VHo5y4EKF5Q5GpSwm6nsyxJeNwqS/G
      /zsWZ8feAjPTFp1bVhi6HKGhuchjD3nXz1yzcdnZ00c+28TkRCsxo4pvf+vf8NDBHzF44QCg
      k0rmGBntoX1TH4vzadIN15mdaMfRHrxN9CcVqiqSiiqUrujILLO4YpCqKXJ9tAZHwdJClOzN
      GHaoRFw32b4zS++lFKYTuusRjfWoUjS4mbXIL+q0N1dYKq226bu3FqhK2pTmLSxT40xvjOxN
      i1x+7W7rp7VmAAYv7ObyUBdbdp5iqezy5a/8jKM//wPqGid498xe4skVFhZqGB7aweWhTvoH
      dlLbfIPZbKOnxa1HhfkoQ8NJBi/X0N9fx+BgHfFYmcJSmAvnmsku69SnVygsRhmYCNHTUqSl
      fomx8RhOAAOwuGBQV1+huGzSfzHC4GCUM2diDPYm6dk/z46dSzgVaGmqEK+tYFe8HRDQXNdV
      5aVpXvxSLYePPIdSxzh3bvead3bKCeYLLrWppTV/39Jyg/r6j+7UPcgc5xuUy51MTMTI5dYe
      sMzejFHfsHb/wDRdtm2b+SxLvK9o2m4qlQQTExa5nPXBLxTkZkzS6bXnpaVSNm1tZc/qkE6w
      xz6+E/xgd2g/Db87wQ/uALMQd0ACIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIg
      Ak0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJN
      AiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACzdszjgWYpkXR9Xa/y1g3
      lEr4XQIgAfCM62rYtmxQ75Sua4D/ZwWU/5gINAmAx5SChQWLiq1RKmt+lyN+C2kCeWzkbANn
      c4r9WwtcvlJFc60NkTK1EY3xrElHpsy1GyE2NFaYmA7Ts22Oof4a2jsXyE7GqEqUmJyMsHdv
      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
      0+PMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Wealth of Nations' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
